<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Front on SimiYoung</title>
    <link>http://localhost:1313/categories/front/</link>
    <description>Recent content in Front on SimiYoung</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 07 Aug 2024 22:17:44 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/front/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript</title>
      <link>http://localhost:1313/posts/3.-javascript/</link>
      <pubDate>Wed, 07 Aug 2024 22:17:44 +0800</pubDate>
      <guid>http://localhost:1313/posts/3.-javascript/</guid>
      <description>JavaScript 教程 在 HTML 中，JavaScript 代码必须位于标签之间。
能够在 HTML 文档中放置任意数量的脚本。
脚本可被放置与 HTML 页面的 &amp;lt;body&amp;gt; 或 &amp;lt;head&amp;gt; 部分中，或兼而有之。
1 &amp;lt;script src=&amp;#34;myScript.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 注意是 src是引用 js 的方式。
通过 const 定义的变量与 let 变量类似，但==不能重新赋值。==
模板字面量_提供了一种将变量和表达式插入字符串的简单方法&amp;ndash;${...}
箭头函数 1 2 3 hello = () =&amp;gt; { return &amp;#34;Hello World!&amp;#34;; } 模块（modules） 导出 JavaScript 模块允许您将代码分解成单独的文件。
这会使维护代码库更加容易。
模块是使用 import 语句从外部文件导入的。
模块还依赖于 &amp;lt; script &amp;gt; 标签中的 type=&amp;quot;module&amp;quot;。
1 2 3 &amp;lt;script type=&amp;#34;module&amp;#34;&amp;gt; import message from &amp;#34;./message.js&amp;#34;; &amp;lt;/script&amp;gt; 命名导出（Named Exports） 让我们创建一个名为 person.js 的文件，并在其中填充我们要导出的内容。</description>
    </item>
    <item>
      <title>CSS</title>
      <link>http://localhost:1313/posts/2.-css/</link>
      <pubDate>Mon, 01 Jul 2024 17:39:44 +0800</pubDate>
      <guid>http://localhost:1313/posts/2.-css/</guid>
      <description>字体属性的说明 （1）网页中不是所有字体都能用，因为这个字体要看用户的电脑里面装没装，比如你设置：
1 font-family: &amp;#34;华文彩云&amp;#34;; 上方代码中，如果用户的 Windows 电脑里面没有这个字体，那么就会变成宋体。
页面中，中文我们一般使用：微软雅黑、宋体、黑体。英文使用：Arial、Times New Roman。页面中如果需要其他的字体，就需要单独安装字体，或者切图。
（2）为了防止用户电脑里，没有微软雅黑这个字体。就要用英语的逗号，提供备选字体。如下：（可以备选多个）
1 font-family: &amp;#34;微软雅黑&amp;#34;,&amp;#34;宋体&amp;#34;; 上方代码表示：如果用户电脑里没有安装微软雅黑字体，那么就是宋体。
（3）我们须将英语字体放在最前面，这样所有的中文，就不能匹配英语字体，就自动的变为后面的中文字体：
1 font-family: &amp;#34;Times New Roman&amp;#34;,&amp;#34;微软雅黑&amp;#34;,&amp;#34;宋体&amp;#34;; 上方代码的意思是，英文会采用Times New Roman字体，而中文会采用微软雅黑字体（因为美国人设计的Times New Roman字体并不针对中文，所以中文会采用后面的微软雅黑）。比如说，对于smyhvae哈哈哈这段文字，smyhvae会采用Times New Roman字体，而哈哈哈会采用微软雅黑字体。
CSS 整体感知 我们先来看一段简单的 css 代码：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; p { color: red; font-size: 30px; text-decoration: underline; font-weight: bold; text-align: center; font-style: italic; } h1 { color: blue; font-size: 50px; font-weight: bold; background-color: pink; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;我是大标题&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;我是内容&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 解释如下：</description>
    </item>
    <item>
      <title>HTML</title>
      <link>http://localhost:1313/posts/1.-html/</link>
      <pubDate>Thu, 27 Jun 2024 22:17:44 +0800</pubDate>
      <guid>http://localhost:1313/posts/1.-html/</guid>
      <description>div和span的区别 &amp;lt;span&amp;gt;和&amp;lt;div&amp;gt;唯一的区别在于：&amp;lt;span&amp;gt;是不换行的，而&amp;lt;div&amp;gt;是换行的。
如果单独在网页中插入这两个元素，不会对页面产生任何的影响。这两个元素是专门为定义CSS样式而生的。或者说，DIV+CSS来实现各种样式。
div在浏览器中，默认是不会增加任何的效果的，但是语义变了，div中的所有元素是一个小区域。 div标签是一个容器级标签，里面什么都能放，甚至可以放div自己。
span也是表达“小区域、小跨度”的标签，但只是一个文本级的标签。 就是说，span里面只能放置文字、图片、表单元素。 span里面不能放p、h、ul、dl、ol、div。
span举例 1 2 3 4 5 6 7 &amp;lt;p&amp;gt; 简介简介简介简介简介简介简介简介 &amp;lt;span&amp;gt; &amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;详细信息&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;购买&amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/p&amp;gt; div举例 1 2 3 4 5 6 7 8 9 &amp;lt;div class=&amp;#34;header&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;logo&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;nav&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;content&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;guanggao&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;dongxi&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;footer&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; 我们亲切地称这种模式叫做“div+css”：div标签负责布局、结构、分块，css负责样式。
表格标签 表格标签用&amp;lt;table&amp;gt;表示。 一个表格&amp;lt;table&amp;gt;是由每行&amp;lt;tr&amp;gt;组成的，每行是由每个单元格&amp;lt;td&amp;gt;组成的。 所以我们要记住，一个表格是由行组成的（行是由列组成的），而不是由行和列组成的。 在以前，要想固定标签的位置，唯一的方法就是表格。现在可以通过CSS定位的功能来实现。但是现在在做页面的时候，表格作用还是有一些的。
&amp;lt;table&amp;gt;属性 border：边框。像素为单位。
style=&amp;quot;border-collapse:collapse;&amp;quot;：单元格的线和表格的边框线合并（表格的两边框合并为一条）
width：宽度。像素为单位。
height：高度。像素为单位。
bordercolor：表格的边框颜色。
align：表格的水平对齐方式。属性值可以填：left right center。 注意：这里不是设置表格里内容的对齐方式，如果想设置内容的对齐方式，要对单元格标签&amp;lt;td&amp;gt;进行设置）
cellpadding：单元格内容到边的距离，像素为单位。默认情况下，文字是紧挨着左边那条线的，即默认情况下的值为0。 注意不是单元格内容到四条边的距离哈，而是到一条边的距离，默认是与左边那条线的距离。如果设置属性dir=&amp;quot;rtl&amp;quot;，那就指的是内容到右边那条线的距离。
cellspacing：单元格和单元格之间的距离（外边距），像素为单位。默认情况下的值为0</description>
    </item>
  </channel>
</rss>
